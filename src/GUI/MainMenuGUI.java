package GUI;

import Assets.ConstantesColor;
import java.awt.CardLayout;
import HTTP.Clientes_Http;
import HTTP.Creditos_HTTP;
import HTTP.Empleados_HTTP;
import HTTP.Ventas_Http;
import Objets.Cliente;
import Objets.Credito;
import Objets.Empleado;
import Objets.Venta;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jaime
 */
public class MainMenuGUI extends javax.swing.JFrame {

    public static Empleado globalEmpleado = null;

    /**
     * Creates new form MainMenuGUI
     */
    public MainMenuGUI() {
        initComponents();
        CardLayout card = (CardLayout) this.jPanel2.getLayout();
        card.show(this.jPanel2, "Panelimg");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Empleados = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        empleadosTabla = new org.jdesktop.swingx.JXTable();
        Clientes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes1 = new org.jdesktop.swingx.JXTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Ventas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ventasTabla = new org.jdesktop.swingx.JXTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        ventasTabla1 = new org.jdesktop.swingx.JXTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        ventasTabla2 = new org.jdesktop.swingx.JXTable();
        Creditos = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        creditoTabla = new org.jdesktop.swingx.JXTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        creditoTabla1 = new org.jdesktop.swingx.JXTable();
        jToolBar2 = new javax.swing.JToolBar();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(ConstantesColor.fondo);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1377, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 876, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4, "card5");

        Empleados.setBackground(new java.awt.Color(255, 255, 255));

        empleadosTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Edad", "Sexo", "Teléfono", "Puesto", "Sueldo", "Bonos", "Tienda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(empleadosTabla);

        javax.swing.GroupLayout EmpleadosLayout = new javax.swing.GroupLayout(Empleados);
        Empleados.setLayout(EmpleadosLayout);
        EmpleadosLayout.setHorizontalGroup(
            EmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmpleadosLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        EmpleadosLayout.setVerticalGroup(
            EmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
        );

        jPanel2.add(Empleados, "Empleados");

        Clientes.setBackground(new java.awt.Color(255, 255, 255));

        tableClientes1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Edad", "Sexo", "Teléfono", "Correo", "Domicilio", "Fecha Nacimiento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableClientes1);

        jButton2.setText("Editar Cliente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Nuevo Cliente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClientesLayout = new javax.swing.GroupLayout(Clientes);
        Clientes.setLayout(ClientesLayout);
        ClientesLayout.setHorizontalGroup(
            ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientesLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(0, 101, Short.MAX_VALUE))
            .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientesLayout.createSequentialGroup()
                    .addContainerGap(1231, Short.MAX_VALUE)
                    .addComponent(jButton3)
                    .addGap(12, 12, 12)))
        );
        ClientesLayout.setVerticalGroup(
            ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
            .addGroup(ClientesLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ClientesLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jButton3)
                    .addContainerGap(844, Short.MAX_VALUE)))
        );

        jPanel2.add(Clientes, "Operaciones");

        Ventas.setBackground(new java.awt.Color(255, 255, 255));

        ventasTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Cantidad", "Total Vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ventasTabla);

        ventasTabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Empleado", "Cliente", "Cantidad", "Producto", "Total", "Forma Pago"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(ventasTabla1);

        ventasTabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Empleado", "Total Vendido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(ventasTabla2);

        javax.swing.GroupLayout VentasLayout = new javax.swing.GroupLayout(Ventas);
        Ventas.setLayout(VentasLayout);
        VentasLayout.setHorizontalGroup(
            VentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VentasLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 950, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(VentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        VentasLayout.setVerticalGroup(
            VentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VentasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VentasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(VentasLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(Ventas, "ventas");

        Creditos.setBackground(new java.awt.Color(255, 255, 255));

        creditoTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Fecha", "Fecha Pago", "Tipo", "Cantidad", "Intereses"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(creditoTabla);

        creditoTabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(creditoTabla1);

        javax.swing.GroupLayout CreditosLayout = new javax.swing.GroupLayout(Creditos);
        Creditos.setLayout(CreditosLayout);
        CreditosLayout.setHorizontalGroup(
            CreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreditosLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 894, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CreditosLayout.setVerticalGroup(
            CreditosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
        );

        jPanel2.add(Creditos, "creditos");

        jToolBar2.setBackground(ConstantesColor.fondo);
        jToolBar2.setBorder(null);
        jToolBar2.setRollover(true);

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setSeparatorSize(new java.awt.Dimension(30, 30));
        jToolBar2.add(jSeparator2);

        jLabel1.setText("Usuario");
        jToolBar2.add(jLabel1);

        jLabel2.setText("Puesto");
        jToolBar2.add(jLabel2);

        jSeparator1.setSeparatorSize(new java.awt.Dimension(50, 0));
        jToolBar2.add(jSeparator1);

        jButton1.setBackground(ConstantesColor.fondo);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Main/Operaciones.png"))); // NOI18N
        jButton1.setText("Clientes");
        jButton1.setBorderPainted(false);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jButton6.setBackground(ConstantesColor.fondo);
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Main/ventas.png"))); // NOI18N
        jButton6.setText("Ventas");
        jButton6.setBorderPainted(false);
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton6);

        jButton7.setBackground(ConstantesColor.fondo);
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Main/empleado-de-oficina (1).png"))); // NOI18N
        jButton7.setText("Empleados");
        jButton7.setBorderPainted(false);
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton7);

        jButton8.setBackground(ConstantesColor.fondo);
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Main/deuda (1).png"))); // NOI18N
        jButton8.setText("Prestamos");
        jButton8.setBorderPainted(false);
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton8);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1261, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 805, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(77, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CardLayout card = (CardLayout) this.jPanel2.getLayout();
        DefaultTableModel tableModel = (DefaultTableModel) tableClientes1.getModel();
        tableModel.setRowCount(0);
        card.show(this.jPanel2, "Operaciones");
        Clientes_Http.getClientes();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        CardLayout card = (CardLayout) this.jPanel2.getLayout();
        DefaultTableModel tableModel = (DefaultTableModel) ventasTabla.getModel();
        tableModel.setRowCount(0);
        tableModel = (DefaultTableModel) ventasTabla1.getModel();
        tableModel.setRowCount(0);
        tableModel = (DefaultTableModel) ventasTabla2.getModel();
        tableModel.setRowCount(0);
        card.show(this.jPanel2, "ventas");
        Ventas_Http.getVentas();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CardLayout card = (CardLayout) this.jPanel2.getLayout();
        DefaultTableModel tableModel = (DefaultTableModel) empleadosTabla.getModel();
        tableModel.setRowCount(0);
        card.show(this.jPanel2, "Empleados");
        Empleados_HTTP.getEmpleados(globalEmpleado);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        CardLayout card = (CardLayout) this.jPanel2.getLayout();
        DefaultTableModel tableModel = (DefaultTableModel) creditoTabla.getModel();
        tableModel.setRowCount(0);
        tableModel = (DefaultTableModel) creditoTabla1.getModel();
        tableModel.setRowCount(0);
        card.show(this.jPanel2, "creditos");
        Creditos_HTTP.getCreditos();
    }//GEN-LAST:event_jButton8ActionPerformed

    public static void mainMenuGUI(Empleado empleado) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenuGUI().setVisible(true);
                globalEmpleado = empleado;
                jLabel1.setText(globalEmpleado.getNombre());
                jLabel2.setText(" - " + globalEmpleado.getPuesto().getPuesto() + " " + globalEmpleado.getTienda().getNombre());
                if (globalEmpleado.getPuesto().getPuesto().matches("Gerente")) {
                    jButton7.setVisible(true);
                } else {
                    jButton7.setVisible(false);
                }
            }
        });
    }

    public static void fillTablaClientes(Cliente cliente) {
        DefaultTableModel tableModel = (DefaultTableModel) tableClientes1.getModel();
        Object[] rowData = new Object[]{
            cliente.getId(),
            cliente.getNombre(),
            cliente.getEdad(),
            cliente.getSexo(),
            cliente.getContacto().getTelefono(),
            cliente.getContacto().getCorreo(),
            cliente.getDomicilio(),
            cliente.getFechaNacimiento()
        };
        SwingUtilities.invokeLater(() -> {
            tableModel.addRow(rowData);
        });
    }

    public static void fillTablaEmpleados(Empleado empleado) {
        DefaultTableModel tableModel = (DefaultTableModel) empleadosTabla.getModel();
        Object[] rowData = new Object[]{
            empleado.getId(),
            empleado.getNombre(),
            empleado.getEdad(),
            empleado.getSexo(),
            empleado.getContacto().getTelefono(),
            empleado.getPuesto().getPuesto(),
            empleado.getPuesto().getSueldo(),
            empleado.getPuesto().getBonos(),
            empleado.getTienda().getNombre()
        };
        SwingUtilities.invokeLater(() -> {
            tableModel.addRow(rowData);
        });
    }

    public static void fillTablaVentas(Venta venta) {
        DefaultTableModel tableModel = (DefaultTableModel) ventasTabla1.getModel();
        Object[] rowData = new Object[]{
            venta.getId(),
            venta.getEmpleado().getNombre(),
            venta.getCliente().getNombre(),
            venta.getCant_venta(),
            venta.getProducto().getNombre(),
            venta.getPrecio_venta(),
            venta.getTipo_pago()
        };
        SwingUtilities.invokeLater(() -> {
            tableModel.addRow(rowData);
        });
    }

    public static void fillTablaVentas2(HashMap<String, Integer> empleadoVentas) {
        DefaultTableModel tableModel = (DefaultTableModel) ventasTabla2.getModel();

        tableModel.setRowCount(0);

        SwingUtilities.invokeLater(() -> {
            for (String empleado : empleadoVentas.keySet()) {
                int ventas = empleadoVentas.get(empleado);
                Object[] rowData = new Object[]{empleado, ventas};
                tableModel.addRow(rowData);
            }
        });
    }

    public static void fillTablaVentas3(Map<String, int[]> productoVentas) {
        DefaultTableModel tableModel = (DefaultTableModel) ventasTabla.getModel();
        tableModel.setRowCount(0);

        SwingUtilities.invokeLater(() -> {
            for (String producto : productoVentas.keySet()) {
                int[] datosVenta = productoVentas.get(producto);
                int cantidadVendida = datosVenta[0];
                int totalVentas = datosVenta[1];

                Object[] rowData = new Object[]{producto, cantidadVendida, totalVentas};
                tableModel.addRow(rowData);
            }
        });
    }

    public static void fillTablaCreditos(Credito credito) {
        DefaultTableModel tableModel = (DefaultTableModel) creditoTabla.getModel();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm");

        String fechaInicioFormateada = credito.getFechaInicio().format(formatter);
        String fechaFinalFormateada = credito.getFechaFinal().format(formatter);

        Object[] rowData = new Object[]{
            credito.getId(),
            credito.getCliente().getNombre(),
            fechaInicioFormateada,
            fechaFinalFormateada,
            credito.getTipoCredito().getNombre(),
            credito.getPrestamo(),
            credito.getTipoCredito().getInteres()
        };

        SwingUtilities.invokeLater(() -> {
            tableModel.addRow(rowData);
        });
    }

    public static void fillTablaCreditos1(HashMap<String, Integer> clienteDeuda) {
        DefaultTableModel tableModel = (DefaultTableModel) creditoTabla1.getModel();

        tableModel.setRowCount(0);

        SwingUtilities.invokeLater(() -> {
            for (String cliente : clienteDeuda.keySet()) {
                int deuda = clienteDeuda.get(cliente);
                Object[] rowData = new Object[]{cliente, deuda};
                tableModel.addRow(rowData);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Clientes;
    private javax.swing.JPanel Creditos;
    private javax.swing.JPanel Empleados;
    private javax.swing.JPanel Ventas;
    private static org.jdesktop.swingx.JXTable creditoTabla;
    private static org.jdesktop.swingx.JXTable creditoTabla1;
    private static org.jdesktop.swingx.JXTable empleadosTabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private static javax.swing.JButton jButton7;
    private static javax.swing.JButton jButton8;
    private static javax.swing.JLabel jLabel1;
    private static javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar2;
    private static org.jdesktop.swingx.JXTable tableClientes1;
    private static org.jdesktop.swingx.JXTable ventasTabla;
    private static org.jdesktop.swingx.JXTable ventasTabla1;
    private static org.jdesktop.swingx.JXTable ventasTabla2;
    // End of variables declaration//GEN-END:variables
}
